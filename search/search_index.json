{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"synbconvert Azure Synapse Analytics and Data Factory use notebooks for data preparation, data visualization, machine learning, and many other tasks. However, performing proper version control working with these notebooks is a pain. Merging long nested JSON documents with git is nearly impossible. If you would like to use Azure Synapse Analytics or Data Factory for large scale projects while compling with the standards of good software engineering, synbconvert may be the tool you are looking for. You will be able to develop code in your favorite IDE and colaborate with your team as usual. Features synbconvert is a simple command line tool and Python API to convert Python files to Azure Synapse Analytics / Data Factory notebooks and vice versa. The main features of the tool include: Lean annotation syntax for Python files Conversion of Python files to Azure Synapse Analytics / Data Factory notebooks based on annotations Conversion of Azure Synapse Analytics / Data Factory notebooks to annotated Python files Workflow Installation pip synbconvert releases are available as source packages and binary wheels. Before you install synbconvert and its dependencies, make sure that your pip, setuptools and wheel are up to date. When using pip it is generally recommended to install packages in a virtual environment to avoid modifying system state. You can install synbconvert with: $ pip install synbconvert Install from source The other way to install synbconvert is to clone its GitHub repository and build it from source. That is the common way if you want to make changes to the code base. To install from source: $ git clone https://github.com/alpine-data/synbconvert.git $ pip install -r requirements.txt $ pip install -e .","title":"Home"},{"location":"#synbconvert","text":"Azure Synapse Analytics and Data Factory use notebooks for data preparation, data visualization, machine learning, and many other tasks. However, performing proper version control working with these notebooks is a pain. Merging long nested JSON documents with git is nearly impossible. If you would like to use Azure Synapse Analytics or Data Factory for large scale projects while compling with the standards of good software engineering, synbconvert may be the tool you are looking for. You will be able to develop code in your favorite IDE and colaborate with your team as usual.","title":"synbconvert"},{"location":"#features","text":"synbconvert is a simple command line tool and Python API to convert Python files to Azure Synapse Analytics / Data Factory notebooks and vice versa. The main features of the tool include: Lean annotation syntax for Python files Conversion of Python files to Azure Synapse Analytics / Data Factory notebooks based on annotations Conversion of Azure Synapse Analytics / Data Factory notebooks to annotated Python files","title":"Features"},{"location":"#workflow","text":"","title":"Workflow"},{"location":"#installation","text":"","title":"Installation"},{"location":"#pip","text":"synbconvert releases are available as source packages and binary wheels. Before you install synbconvert and its dependencies, make sure that your pip, setuptools and wheel are up to date. When using pip it is generally recommended to install packages in a virtual environment to avoid modifying system state. You can install synbconvert with: $ pip install synbconvert","title":"pip"},{"location":"#install-from-source","text":"The other way to install synbconvert is to clone its GitHub repository and build it from source. That is the common way if you want to make changes to the code base. To install from source: $ git clone https://github.com/alpine-data/synbconvert.git $ pip install -r requirements.txt $ pip install -e .","title":"Install from source"},{"location":"api/","text":"API Reference This page provides documentation for our Python API. SynapseNotebookConverter ( SynapseNotebookHandler , PythonFileHandler ) This class is responsible for converting Python files to Synapse notebooks and vice versa. Source code in synbconvert/synbconvert.py class SynapseNotebookConverter ( SynapseNotebookHandler , PythonFileHandler ): \"\"\" This class is responsible for converting Python files to Synapse notebooks and vice versa. \"\"\" def __init__ ( self ) -> None : super ( SynapseNotebookConverter , self ) . __init__ () def convert_synapse_notebook_to_python_file ( self , notebook_file : str , python_file : str ) -> None : \"\"\" Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. \"\"\" cells = self . read_synapse_notebook ( notebook_file ) self . write_python_file ( python_file , cells ) def convert_python_file_to_synapse_notebook ( self , python_file : str , notebook_file : str ) -> None : \"\"\" Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. \"\"\" lines = self . read_python_file ( python_file ) self . write_synapse_notebook ( notebook_file , lines ) convert_python_file_to_synapse_notebook ( self , python_file , notebook_file ) Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. Source code in synbconvert/synbconvert.py def convert_python_file_to_synapse_notebook ( self , python_file : str , notebook_file : str ) -> None : \"\"\" Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. \"\"\" lines = self . read_python_file ( python_file ) self . write_synapse_notebook ( notebook_file , lines ) convert_synapse_notebook_to_python_file ( self , notebook_file , python_file ) Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. Source code in synbconvert/synbconvert.py def convert_synapse_notebook_to_python_file ( self , notebook_file : str , python_file : str ) -> None : \"\"\" Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. \"\"\" cells = self . read_synapse_notebook ( notebook_file ) self . write_python_file ( python_file , cells )","title":"API Reference"},{"location":"api/#api-reference","text":"This page provides documentation for our Python API.","title":"API Reference"},{"location":"api/#synbconvert.synbconvert.SynapseNotebookConverter","text":"This class is responsible for converting Python files to Synapse notebooks and vice versa. Source code in synbconvert/synbconvert.py class SynapseNotebookConverter ( SynapseNotebookHandler , PythonFileHandler ): \"\"\" This class is responsible for converting Python files to Synapse notebooks and vice versa. \"\"\" def __init__ ( self ) -> None : super ( SynapseNotebookConverter , self ) . __init__ () def convert_synapse_notebook_to_python_file ( self , notebook_file : str , python_file : str ) -> None : \"\"\" Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. \"\"\" cells = self . read_synapse_notebook ( notebook_file ) self . write_python_file ( python_file , cells ) def convert_python_file_to_synapse_notebook ( self , python_file : str , notebook_file : str ) -> None : \"\"\" Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. \"\"\" lines = self . read_python_file ( python_file ) self . write_synapse_notebook ( notebook_file , lines )","title":"SynapseNotebookConverter"},{"location":"api/#synbconvert.synbconvert.SynapseNotebookConverter.convert_python_file_to_synapse_notebook","text":"Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. Source code in synbconvert/synbconvert.py def convert_python_file_to_synapse_notebook ( self , python_file : str , notebook_file : str ) -> None : \"\"\" Converts a Python file into a Synapse notebook. :param python_file: The Python file to be converted. :param notebook_file: The path of the resulting Synapse notebook. \"\"\" lines = self . read_python_file ( python_file ) self . write_synapse_notebook ( notebook_file , lines )","title":"convert_python_file_to_synapse_notebook()"},{"location":"api/#synbconvert.synbconvert.SynapseNotebookConverter.convert_synapse_notebook_to_python_file","text":"Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. Source code in synbconvert/synbconvert.py def convert_synapse_notebook_to_python_file ( self , notebook_file : str , python_file : str ) -> None : \"\"\" Converts a Synapse notebook into a Python file. :param notebook_file: The Synapse notebook to be converted. :param python_file: The path of the resulting Python file. \"\"\" cells = self . read_synapse_notebook ( notebook_file ) self . write_python_file ( python_file , cells )","title":"convert_synapse_notebook_to_python_file()"},{"location":"cli/","text":"CLI Reference This page provides documentation for our command line tools. synbconvert Defines the click command for converting Python files to Synapse notebooks and vice versa. :param source: The file to be converted. :param target: The path of the resulting file. Usage: synbconvert [OPTIONS] SOURCE TARGET Options: --help Show this message and exit. Test","title":"CLI Reference"},{"location":"cli/#cli-reference","text":"This page provides documentation for our command line tools.","title":"CLI Reference"},{"location":"cli/#synbconvert","text":"Defines the click command for converting Python files to Synapse notebooks and vice versa. :param source: The file to be converted. :param target: The path of the resulting file. Usage: synbconvert [OPTIONS] SOURCE TARGET Options: --help Show this message and exit. Test","title":"synbconvert"},{"location":"usage/","text":"TBD","title":"Usage"}]}